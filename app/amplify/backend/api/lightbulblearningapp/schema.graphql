type OpenAnswerDraft @model @auth(rules: [{allow: public}, {allow: owner}]) @key(name: "byOpenQuestion", fields: ["openquestionID"]) {
  id: ID!
  answerText: String
  openquestionID: ID
}

type OpenAnswer @model @auth(rules: [{allow: public}]) @key(name: "byOpenQuestion", fields: ["openquestionID"]) {
  id: ID!
  answerText: String
  owner: ID
  openquestionID: ID
  version: Int
}

type OpenFeedbackDraft @model @auth(rules: [{allow: public}, {allow: owner}]) @key(name: "byOpenAnswer", fields: ["openanswerID"]) {
  id: ID!
  feedbackText: String
  openanswerID: ID
}

type OpenFeedback @model @auth(rules: [{allow: public}]) @key(name: "byOpenAnswer", fields: ["openanswerID"]) {
  id: ID!
  feedbackText: String
  owner: ID
  openanswerID: ID
}

type OpenQuestion @model @auth(rules: [{allow: public}, {allow: owner, operations: [create, update, delete]}]) @key(name: "byChallengePool", fields: ["challengepoolID"]) {
  id: ID!
  questionText: String
  challengepoolID: ID
  owner: ID
  OpenAnswers: [OpenAnswer] @connection(keyName: "byOpenQuestion", fields: ["id"])
  OpenAnswerDrafts: [OpenAnswerDraft] @connection(keyName: "byOpenQuestion", fields: ["id"])
}

type ChallengePool @model @auth(rules: [{allow: public}, {allow: owner, operations: [create, update, delete]}]) {
  id: ID!
  description: String
  owner: ID
  OpenQuestions: [OpenQuestion] @connection(keyName: "byChallengePool", fields: ["id"])
  OpenQuestionDrafts: [OpenQuestionDraft] @connection(keyName: "byChallengePool", fields: ["id"])
  groupID: ID
}

type OpenQuestionDraft @model @auth(rules: [{allow: public}, {allow: owner}]) @key(name: "byChallengePool", fields: ["challengepoolID"]) {
  id: ID!
  questionText: String
  answerText: String
  challengepoolID: ID
}
 