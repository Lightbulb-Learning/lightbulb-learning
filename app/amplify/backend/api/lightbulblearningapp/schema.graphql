type OpenAnswer @model @auth(rules: [{allow: public}]) @key(name: "byOpenQuestion", fields: ["openquestionID"]) {
  id: ID!
  answerText: String
  openquestionID: ID
}

type OpenQuestion @model @auth(rules: [{allow: public}, {allow: owner, operations: [create, update, delete]}]) @key(name: "byChallengePool", fields: ["challengepoolID"]) {
  id: ID!
  questionText: String
  challengepoolID: ID
  OpenAnswers: [OpenAnswer] @connection(keyName: "byOpenQuestion", fields: ["id"])
}

type ChallengePool @model @auth(rules: [{allow: public}, {allow: owner, operations: [create, update, delete]}]) {
  id: ID!
  description: String
  OpenQuestions: [OpenQuestion] @connection(keyName: "byChallengePool", fields: ["id"])
  OpenQuestionDrafts: [OpenQuestionDraft] @connection(keyName: "byChallengePool", fields: ["id"])
}

type OpenQuestionDraft @model @auth(rules: [{allow: public}, {allow: owner}]) @key(name: "byChallengePool", fields: ["challengepoolID"]) {
  id: ID!
  questionText: String
  answerText: String
  challengepoolID: ID
}
 