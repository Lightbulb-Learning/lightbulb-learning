apiVersion: apps/v1
kind: Deployment
metadata:
  name: assessment-service-deployment
spec:
  selector:
    matchLabels:
      app: assessment-service
  replicas: 2
  template:
    metadata:
      labels:
        app: assessment-service
    spec:
      containers:
      - name: assessment-service-docker
        image: 532688539985.dkr.ecr.eu-central-1.amazonaws.com/assessment-service:latest
        ports:
        - containerPort: 3000
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: aws_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: aws_secret_key
---
# note this service is automatically created from cloud provider if we specify LoadBalancer!! 
apiVersion: v1
kind: Service
metadata:
  name: assessment-service-extern
spec:
  type: NodePort
  selector:
    app:  assessment-service
  ports:
    - protocol: TCP
      port: 3000 # routes to port 3000 (SERVICE) from `nodePort`
      targetPort: 3000 # routes to port 3000 (POD) from `port` 
      nodePort: 30100 # reachable from extern with nodeIP and this port
---
# note this service is automatically created from cloud provider if we specify LoadBalancer!! 
apiVersion: v1
kind: Service
metadata:
  name: assessment-service-cluster-ip
spec:
  type: ClusterIP
  selector:
    app: assessment-service
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: assessment-service-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: assessment-service
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000